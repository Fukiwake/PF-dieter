- if notifications.present?
  - notifications.each do |notification|
    - visitor = notification.visitor
    - visited = notification.visited
    %span
      = link_to customer_path(visitor) do
        = attachment_image_tag(visitor, :profile_image, size: "20x20", fallback: "no_image.png", class: "profile-image-small")
        %strong
          = visitor.name
      さんが
      - case notification.action
      - when "follow"
        あなたをフォローしました
      - when "diary_favorite"
        = link_to notification.diary.title, diary_path(notification.diary), class: "font-weight-bold"
        にいいねしました
      - when "diary_comment"
        = link_to notification.diary.title, diary_path(notification.diary), class: "font-weight-bold"
        にコメントしました
        %p.text-muted.mb-0
          = notification.diary_comment.body.truncate(100)
      - when "diet_method_favorite"
        = link_to notification.diet_method.title, diet_method_path(notification.diet_method), class: "font-weight-bold"
        にいいねしました
      - when "diet_method_comment"
        = link_to notification.diet_method.title, diet_method_path(notification.diet_method), class: "font-weight-bold"
        にコメントしました
        %p.text-muted.mb-0
          = notification.diet_method_comment.body.truncate(100)
      - when "chat"
        あなたに
        = link_to "メッセージ", chat_path(notification.visitor_id), class: "font-weight-bold"
        を送信しました
        %p.text-muted.mb-0
          = notification.chat.message.truncate(100)
      - when "diary"
        = link_to "#{notification.diary.title}", diary_path(notification.diary), class: "font-weight-bold"
        を投稿しました
      - when "diet_method"
        = link_to "#{notification.diet_method.title}", diet_method_path(notification.diet_method), class: "font-weight-bold"
        を投稿しました
    .small.text-muted.text-right
      #{time_ago_in_words(notification.created_at).upcase}前
    %hr
- else
  %p
    未読の通知はありません
  %hr